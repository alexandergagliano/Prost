
[project]
name = "astro-prost"
license = {file = "LICENSE"}
readme = "README.md"
authors = [
    { name = "Alex Gagliano", email = "gaglian2@mit.edu" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
dynamic = ["version"]
requires-python = ">=3.8"
dependencies = [
  "numpy", 
  "astropy", 
  "matplotlib", 
  "pandas", 
  "scikit-learn", 
  "tqdm",
  "torch", 
  "scipy", 
  "specutils>=1.13; python_version=='3.9'",
  "astro-datalab", 
  "requests",
  "colorama",
  "sfdmap; python_version <= '3.9'",
  "sfdmap2; python_version >= '3.9'",
  "filelock",
  "tensorflow==2.13.1; python_version < '3.10' and python_version != '3.8'",
  "tensorflow==2.5.0; python_version == '3.8'",
  "tensorflow>2.16.0; python_version >= '3.10'"
]

[project.urls]
"Source Code" = "https://github.com/alexandergagliano/prost"

# On a mac, install optional dependencies with `pip install '.[dev]'` (include the single quotes)
[project.optional-dependencies]
dev = [
    "asv==0.6.4", # Used to compute performance benchmarks
    "jupyter", # Clears output from Jupyter notebooks
    "pre-commit", # Used to run checks before finalizing a git commit
    "pytest",
    "pytest-cov", # Used to report total code coverage
    "ruff", # Used for static linting of files
]

[build-system]
requires = [
    "setuptools>=62", # Used to build and package the Python project
    "setuptools_scm>=6.2", # Gets release version from git. Makes it available programmatically
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true  

[tool.setuptools.package-data]
"astro_prost" = ["data/*csv*", "data/MLP_lupton.hdf5", "data/ps1_metadata.pkl"]  

[tool.setuptools_scm]
write_to = "src/astro_prost/_version.py"
local_scheme = "no-local-version"  
version_scheme = "no-guess-dev"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.black]
line-length = 110
target-version = ["py39"]

[tool.isort]
profile = "black"
line_length = 110

[tool.ruff]
line-length = 110
target-version = "py39"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # docstrings
    "D101",
    "D102",
    "D103",
    "D106",
    "D206",
    "D207",
    "D208",
    "D300",
    "D417",
    "D419",
    # Numpy v2.0 compatibility
    "NPY201",
]

ignore = [
    "UP006", # Allow non standard library generics in type hints
    "UP007", # Allow Union in type hints
    "SIM114", # Allow if with same arms
    "B028", # Allow default warning level
    "SIM117", # Allow nested with
    "UP015", # Allow redundant open parameters
    "UP028", # Allow yield in for loop
]

[tool.coverage.run]
omit=["src/astro_prost/_version.py"]
